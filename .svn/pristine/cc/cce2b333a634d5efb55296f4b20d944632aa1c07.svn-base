
package drawing;

import dataStorage.block;
import dataStorage.category;
import dataStorage.game;
import dataStorage.stadium;
import dataStorage.wrapper;
import java.util.ArrayList;
import javax.enterprise.context.Dependent;
import javax.faces.event.ActionEvent;
import javax.inject.Named;

@Named(value = "cup")
@Dependent
public class cup {
    public stadium stadium;
    public ArrayList<game> games;
    public block activeBlock;
    public category activeCat;
    public cup()
    {
        stadium = wrapper.getStadium("");
        activeBlock = stadium.getBlock(0);
        activeCat = activeBlock.getCat_0();
    }
    
    public stadium getStadium()
    {
        return this.stadium;
    }
    
    //TODO baustelle
    public block getActiveBlock()
    {
        return this.activeBlock;
    }
    public category getActiveCat()
    {
        return this.activeCat;
    }
    public void setActiveBlock()
    {
        this.activeBlock = stadium.getBlock(1);
        this.activeCat = this.activeBlock.getCat_1();
    }
    public String viewBlock()
    {
        //this.activeBlock = new block("test2", "hier", null, null, null);
        //activeCat = activeBlock.getCat_0();
        return "Block.xhtml";
    }
        
    //Main entry
    public String drawGames()
    {
        try
        {
            StringBuilder sb = new StringBuilder();
            games = wrapper.getGames();
            if(games.isEmpty() == false)
            {
                for (game game : games)
                {
                    sb.append(game.getId());
                    sb.append(": ");
                    sb.append(game.getTeam1());
                    sb.append(" vs. ");
                    sb.append(game.getTeam2());
                    sb.append("<br />");
                }
                return sb.toString();
            }
            else
            {
                return "games list empty";
            }
        }
        catch(Exception ex)
        {
            return ex.getMessage();
        }
    }
    
    public String drawStadium()
    {
        //parameter!
        StringBuilder sb = new StringBuilder();
        
        ArrayList<block> blocks = stadium.getBlocks();
        sb.append("Stadion: ");
        sb.append(stadium.getName());
        sb.append("<br /><br />");
        for(int i = 0; i < blocks.size(); i++)
        {
            sb.append("Block: ");
            sb.append(blocks.get(i).getName());
            sb.append("<br />");
            sb.append("Position: ");
            sb.append(blocks.get(i).getPos());
            sb.append("<br />");
            sb.append(blocks.get(i).getCat_0().getName());
            sb.append(": ");
            sb.append(blocks.get(i).getCat_0().getNumberOfSeats());
            sb.append(" Sitzplätze zu je ");
            sb.append(blocks.get(i).getCat_0().getPrice());
            sb.append("<br />");
            sb.append(blocks.get(i).getCat_1().getName());
            sb.append(": ");
            sb.append(blocks.get(i).getCat_1().getNumberOfSeats());
            sb.append(" Sitzplätze zu je ");
            sb.append(blocks.get(i).getCat_1().getPrice());
            sb.append("<br />");
            sb.append(blocks.get(i).getCat_2().getName());
            sb.append(": ");
            sb.append(blocks.get(i).getCat_2().getNumberOfSeats());
            sb.append(" Sitzplätze zu je ");
            sb.append(blocks.get(i).getCat_2().getPrice());
            sb.append("<br />");
            sb.append("<br />");
        }
        return sb.toString();
    }
    
    public String drawSeats()
    {
        int numberOfSeats = activeCat.getNumberOfSeats();
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < numberOfSeats; i++)
        {
            if(i % 20 == 0)
            {
                sb.append("<div class='clear'></div>");
            }
            sb.append("<div class='seat'>");
            sb.append(i);
            sb.append("</div>");
        }
        return sb.toString();
    }
}
